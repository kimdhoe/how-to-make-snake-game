(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{145:function(t,e,n){"use strict";n.r(e);for(var o=n(27),i=n(8),c=n(0),r=n.n(c),l=n(156),s=n(173),a=(n(190),{container:{marginBottom:"4rem"},sectionHeadingText:{margin:0,fontSize:"1.7rem"},number:{verticalAlign:"middle",paddingRight:"0.35em",fontSize:"1.7em",color:"#dee2e6"},title:{verticalAlign:"middle"}}),b=function(t){var e=t.number,n=t.title,c=t.children;return Object(i.b)("div",{css:Object(o.a)([a.container],"")},Object(i.b)("h2",{css:Object(o.a)([a.sectionHeadingText],"")},Object(i.b)("span",{css:Object(o.a)([a.number],"")},String(e).padStart(2,"0")),Object(i.b)("span",{css:Object(o.a)([a.title],"")},n)),c)},d={container:{}},u=function(t){var e=t.children;return Object(i.b)("p",{css:Object(o.a)([d.container],"")},e)},j={name:"35ezg3",styles:"font-weight:600;"},O=function(t){var e=t.text;t.italic;return Object(i.b)("strong",{css:j},e)},f=function(t){var e=t.text,n=t.very,c=void 0!==n&&n,r=t.serif,l=void 0===r||r;return Object(i.b)("i",{css:Object(o.a)({fontFamily:l?"Georgia":null,fontWeight:c?600:400},"")},e)},p=function(t){var e=t.text,n=t.serif,c=void 0===n||n;return Object(i.b)("i",{css:Object(o.a)({fontFamily:c?"Georgia":null,":hover":{cursor:"default",textDecoration:"line-through"}},"")},e)},m=n(54),y=n.n(m),h=n(150),x=n.n(h),k=n(387),g=n(170),v={container:{overflow:"hidden"},filename:{paddingRight:"0.1em",textAlign:"right"},filenameText:{letterSpacing:"0.04em",fontSize:"0.85em",color:"#868e96"}},w=function(t){var e=t.children,n=t.hideFilename,c=void 0!==n&&n,r=t.changed,l=void 0===r?[]:r,s=t.code,a=x()(t,["children","hideFilename","changed","code"]);return Object(i.b)("div",{css:Object(o.a)([v.container],"")},Object(i.b)(k.a,y()({style:g.base16AteliersulphurpoolLight,customStyle:{margin:0},language:"javascript",lineNumberContainerStyle:{minWidth:40,fontFamily:'Consolas, Menlo, Monaco, "Andale Mono WT", "Andale Mono", "Lucida Console", "Lucida Sans Typewriter", "DejaVu Sans Mono", "Bitstream Vera Sans Mono", "Liberation Mono", "Nimbus Mono L", "Courier New", Courier, monospace',fontSize:14,lineHeight:1.375,direction:"ltr",textAlign:"right",whiteSpace:"pre",wordSpacing:"normal",wordBreak:"normal",tabSize:4,hyphens:"none",background:"rgb(245, 247, 255)",color:"#adb5bd",float:"left",paddingRight:15},lineNumberStyle:function(t){return{color:l.length&&t>=l[0]&&t<=l[1]?"#5c940d":"#bbb"}}},a),e||s),!c&&Object(i.b)("div",{css:Object(o.a)([v.filename],"")},Object(i.b)("span",{css:Object(o.a)([v.filenameText],"")},"src/App.js")))},C={name:"herf4a",styles:"font-size:1.35em;"},S={name:"ef2pwl",styles:"padding-right:0.7em;color:#adb5bd;"},W=function(t){var e=t.text,n=t.number;return Object(i.b)("h3",{css:C},n&&Object(i.b)("span",{css:S},n),e)},E={name:"13nxqjl",styles:"font-size:1em;"},L={name:"wkmpz2",styles:"padding-right:0.6em;color:#adb5bd;"},T=function(t){var e=t.text,n=t.number;return Object(i.b)("h3",{css:E},n&&Object(i.b)("span",{css:L},n),e)},A=function(t){var e=t.code;return Object(i.b)("code",{css:Object(o.a)({padding:"0.07em 0.2em",fontFamily:"Consolas, Menlo, Monaco, 'Andale Mono WT', 'Andale Mono',\n       'Lucida Console', 'Lucida Sans Typewriter', 'DejaVu Sans Mono',\n       'Bitstream Vera Sans Mono', 'Liberation Mono', 'Nimbus Mono L',\n        'Courier New', Courier, monospace",border:"1px solid #dee2e6",borderRadius:3,backgroundColor:"rgb(245, 247, 255)"},"")},e)},I={name:"33tb3m",styles:"font-weight:600;font-style:italic;font-family:Georgia;"},R=function(t){var e=t.text;return Object(i.b)("span",{css:I},e)},D={name:"1if1f2i",styles:"margin-right:2em;width:35%;@media (max-width: 768px){display:none;}"},N=function(t){var e=t.children;return Object(i.b)("div",{css:D},e)},z={name:"8xs3w8",styles:"width:65%;@media (max-width: 768px){width:100%;}"},P=function(t){var e=t.children;return Object(i.b)("div",{css:z},e)},M={name:"18ow5wt",styles:"position:sticky;top:50px;"},K=function(t){var e=t.children,n=t.margin;return Object(i.b)("div",{css:M,style:{margin:n||"4.5em 0 4em"}},e)},F=(n(171),{name:"1msjh1x",styles:"font-style:italic;"}),G={name:"1msjh1x",styles:"font-style:italic;"},H={name:"1msjh1x",styles:"font-style:italic;"},_={name:"1msjh1x",styles:"font-style:italic;"},U={name:"1msjh1x",styles:"font-style:italic;"},Z={name:"1msjh1x",styles:"font-style:italic;"},B={name:"1yxu09j",styles:"color:#333;"},V=function(t){var e=t.title,n=t.title1;return Object(i.b)("div",{style:{display:"flex"}},Object(i.b)(N,null,Object(i.b)(K,null,Object(i.b)(Rn,null))),Object(i.b)(P,null,Object(i.b)(b,{number:0,title:"들어가며"},Object(i.b)(u,null,Object(i.b)(f,{text:"JavaScript"}),"를 익혔고, "," ",Object(i.b)(f,{text:"React"})," 튜토리얼도 한번 따라해보았나요? 아마 지금쯤 지루한 ",Object(i.b)(p,{text:"Click Counter"}),", "," ",Object(i.b)(p,{text:"FizzBuzz"}),", 혹은 "," ",Object(i.b)(p,{text:"To-do List"})," 말고 조금 더 흥미로운 다음 단계의 프로그램을 만들어보고 싶다고 생각하고 있을지도 모르겠군요. "," "," 비동기나 상태 관리 같은 중요한 키워드를 학습할 수 있고, 다른 무엇보다도 만드는 과정이 나에게 깨달음을 줄 수 있는 그런 프로그램 말입니다."," ",Object(i.b)(f,{text:n,serif:!1,very:!0})," ",Object(i.b)(f,{text:""+e,very:!0}),"은 그런 생각을 하고 있지만, 어디서부터 시작해서"," ",Object(i.b)(f,{serif:!1,text:"어떻게 프로그램을 만들어나가야"})," ","하는지 감을 잡지 못한 사람을 위한 튜토리얼입니다."),Object(i.b)(u,null,"이 튜토리얼은 ",Object(i.b)(f,{text:"Web"})," 기술을 다루고 있고 특히 화면을 그리기 위해서"," "," ",Object(i.b)(f,{text:"React"}),"에 의존하긴 하지만 특정 기술이나 라이브러리의 사용법을 알리려는 의도로 만들어진 것은 아닙니다. 세세한 부분에 너무 연연하기보단 작은 게임이나마 프로그램의 시작부터 완성까지, 어떤 사고와 과정을 거쳐 만들어지는지 알아가길 바랍니다."),Object(i.b)(u,null,"시작하기에 앞서 미리 귀뜀하자면, 우리는 아래의 질문들을 던지면서 진행해나가게 됩니다."),Object(i.b)("ul",null,Object(i.b)("li",{css:F},"뱀 게임은 무엇인가?"),Object(i.b)("li",{css:G},"완성된 게임은 대략 어떤 모습인가?"),Object(i.b)("li",{css:H},"게임을 표현하는 데에 필요한 데이터는 어떤 것들이고, 무슨 의미를 갖는가?"),Object(i.b)("li",{css:_},"데이터를 어떻게 코드로 표현할 것인가?"),Object(i.b)("li",{css:U},"어떻게 화면에 출력할 것인가?"),Object(i.b)("li",{css:Z},"게임 상에서 일어나는 변화를 어떻게 처리하고 반영할 것인가?")),Object(i.b)(W,{number:"0.1",text:"프로젝트 설정"}),Object(i.b)(u,null,"이 튜토리얼은 복잡한 설정을 피하기 위해"," ",Object(i.b)("a",{css:B,href:""},Object(i.b)(f,{very:!0,text:"create-react-app"})),"을 사용합니다. 새로 생성한 프로젝트의 ",Object(i.b)(A,{code:"src/App.js"})," 파일의 내용을 지운 후, 아래와 같은 상태에서 시작하도록 하겠습니다."),Object(i.b)(w,{code:"import React from 'react'\n\nclass Game extends React.Component {\n  render () {\n    return null\n  }\n}\n\nexport default Game"}))))},q={name:"gg4vpm",styles:"display:flex;justify-content:space-between;"},J={name:"8vxd2c",styles:"width:32%;"},X={name:"8vxd2c",styles:"width:32%;"},Y={name:"8vxd2c",styles:"width:32%;"},Q={name:"k1rrmo",styles:"position:relative;padding-bottom:100%;width:100%;height:0;border:1px solid #ddd;background-color:#f1f3f5;"},$=function(t){var e=t.snake,n=t.food;return Object(i.b)("div",{css:Q},Object(i.b)(tt,{x:n.x,y:n.y,food:!0}),e.map(function(t,e){return Object(i.b)(tt,{key:e,x:t.x,y:t.y})}))},tt=function(t){var e=t.x,n=t.y,c=t.food,r=void 0!==c&&c;return Object(i.b)("div",{css:Object(o.a)({position:"absolute",left:e/20*100+"%",top:n/20*100+"%",width:"5%"},"")},Object(i.b)("div",{css:Object(o.a)({width:"100%",height:0,paddingBottom:"100%",borderRadius:"50%",backgroundColor:r?"#faa2c1":"#5c940d"},"")}))},et=function(t){t.title,t.title1;return Object(i.b)("div",{style:{display:"flex"}},Object(i.b)(b,{number:1,title:"뱀 게임"},Object(i.b)(u,null,"우리가 만드려는 뱀 게임은 아주 유명한 고전입니다. 화면에 뱀과 먹이가 동시에 표시되고, 뱀은 일정 시간 간격으로 한 칸씩 전진합니다. 플레이어는 방향키로 뱀의 이동방향을 변경할 수 있습니다. 뱀이 먹이를 먹을 때마다 뱀의 길이가 늘어나고, 새로운 먹이가 나타납니다. 뱀이 벽에 부딪치거나 자기 몸통을 물면 게임은 종료됩니다."),Object(i.b)(u,null,"만드려는 프로그램을 충분히 이해하는 것은 말할 필요도 없이 매우 중요한 일입니다. 우리가 가장 먼저 할 일은 연필로 종이에 그림을 그려보면서 실행 중인 게임이 어떤 모습일지 상상해보는 것입니다. 각기 다른 상태에서 실행 중인 프로그램을 시각화해보면 다음과 같습니다."),Object(i.b)("div",{css:q},Object(i.b)("div",{css:J},Object(i.b)($,{food:{x:3,y:3},snake:[{x:9,y:9}]})),Object(i.b)("div",{css:X},Object(i.b)($,{food:{x:15,y:7},snake:[{x:12,y:7},{x:11,y:7},{x:10,y:7},{x:10,y:8},{x:10,y:9},{x:10,y:10},{x:10,y:11},{x:10,y:12},{x:9,y:12},{x:8,y:12},{x:7,y:12},{x:6,y:12},{x:5,y:12},{x:5,y:11},{x:5,y:10}]})),Object(i.b)("div",{css:Y},Object(i.b)($,{food:{x:3,y:19},snake:[{x:7,y:19},{x:7,y:18},{x:7,y:17},{x:7,y:16},{x:8,y:16},{x:8,y:15},{x:8,y:14},{x:8,y:13},{x:8,y:12},{x:8,y:11},{x:8,y:10},{x:8,y:10},{x:8,y:9},{x:8,y:8},{x:8,y:7},{x:8,y:6},{x:9,y:6},{x:10,y:6},{x:11,y:6},{x:12,y:6},{x:13,y:6},{x:14,y:6}]}))),Object(i.b)(u,null,"첫번째 그림은 게임이 시작하는 순간입니다. 처음에 뱀은 머리만 있는 상태로 녹색 원 하나로 표현되었고, 붉은 원으로 표현된 먹이가 있습니다. 두번째 그림은 몸통이 길어진 뱀이 먹이를 먹기 직전의 상태입니다. 마지막 그림은 뱀이 벽에 부딪혀 게임이 종료되는 상태입니다."),Object(i.b)(u,null,"자, 이제 어떤 게임인지 알았으니 프로그램을 본격적으로 구현해 볼 차례입니다. 우리는 게임의 일부분만, 그마저도 단순화된 버전으로 먼저 구현한 뒤 프로그램에 살을 붙이면서 수정해나갈 겁니다. 게임의 모든 요소를 한 번에 구현하려고 하면 프로그램의 구석구석이 공사 중인 상태가 되어버리겠죠. 우리는 단순한 버전부터 시작해서 프로그램이 실행되는 상태를 최대한 유지하면서 차츰차츰 완성도를 높여나갈 겁니다."),Object(i.b)(u,null,"우선 머리만 하나 있는 뱀을 만들어서 움직여보도록 할까요?")))},nt=[],ot=0;ot<20;ot++)nt.push(ot);for(var it={name:"1fniin1",styles:"position:relative;padding-bottom:100%;width:100%;height:0;border:1px solid #ced4da;border-right:0;border-bottom:0;background-color:#f1f3f5;"},ct={name:"cyx4gl",styles:"position:absolute;top:0;right:0;bottom:0;left:0;overflow:hidden;display:flex;"},rt={name:"ge4z11",styles:"width:5%;height:100%;border-right:1px solid #ccc;"},lt={name:"szcoo0",styles:"position:absolute;top:0;right:0;bottom:0;left:0;overflow:hidden;"},st={name:"19tb5k7",styles:"width:100%;height:5%;border-bottom:1px solid #ccc;display:flex;align-items:center;"},at={name:"nw65n3",styles:"margin-top:3px;height:11px;border:1px solid #aaa;border-top:0;border-bottom-left-radius:11px;border-bottom-right-radius:11px;"},bt={name:"h293pf",styles:"margin:0;width:50%;height:11px;border-right:1px solid #aaa;"},dt={name:"kebety",styles:"margin:0;text-align:center;font-family:Georgia;font-size:0.9em;color:#555;"},ut=function(t){var e=t.x,n=t.y,o=t.food;return Object(i.b)("div",{style:{position:"absolute",top:5*e+"%",left:5*n+"%",width:"5%",height:"5%",backgroundColor:o?"#ff8787":"#5c940d"}})},jt={coordinate:{margin:0,fontSize:"0.9em",fontFamily:"Georgia",color:"#555"},type:{fontStyle:"italic"}},Ot=function(){return Object(i.b)("div",null,Object(i.b)("p",{css:Object(o.a)([jt.coordinate],"")},"(0, 0) ",Object(i.b)("span",{css:Object(o.a)([jt.type],"")},"Snake")),Object(i.b)("div",{css:it},Object(i.b)("div",{css:ct},nt.map(function(t){return Object(i.b)("div",{key:t,css:rt})})),Object(i.b)("div",{css:lt},nt.map(function(t){return Object(i.b)("div",{key:t,css:st})})),Object(i.b)(ut,{x:0,y:0}),Object(i.b)(ut,{x:19,y:19,food:!0})),Object(i.b)("p",{css:Object(o.a)([jt.coordinate],""),style:{textAlign:"right"}},Object(i.b)("span",{css:Object(o.a)([jt.type],"")},"Food")," (19, 19)"),Object(i.b)("div",{css:at}),Object(i.b)("div",{css:bt}),Object(i.b)("p",{css:dt},"w = h = 500px"))},ft=n(386),pt=[],mt=0;mt<20;mt++)pt.push(mt);var yt={sampleLabel:{position:"absolute",right:0,bottom:"-10%",display:"none",fontFamily:"Georgia",fontWeight:600,fontStyle:"italic"},sample:{position:"relative",paddingBottom:"70%",width:"70%",height:0,display:"flex",alignItems:"center",justifyContent:"center",textAlign:"center"},sampleWorld1:{position:"absolute",top:0,right:0,bottom:0,left:0,borderRadius:"50%",backgroundColor:"#f1f3f5",":hover":{backgroundColor:"#e9ecef"}},sampleSnake1:{position:"absolute",top:"20%",right:"20%",bottom:"20%",left:"20%",borderRadius:"50%",backgroundColor:"#82c91e"},samplePosition1:{position:"absolute",top:"50%",left:"50%",transform:"translate(-50%, -100%)"},sampleDirection1:{position:"absolute",top:"50%",left:"50%",transform:"translateX(-50%)"},container:{},sampleWorld:{position:"relative",paddingBottom:"70%",width:"70%",height:0,display:"flex",alignItems:"center",justifyContent:"center",borderRadius:"50%",backgroundColor:"#f1f3f5",textAlign:"center"},sampleWorldWrapper:{position:"absolute",top:0,right:0,bottom:0,left:0,display:"flex",alignItems:"center",justifyContent:"center"},sampleSnake:{display:"flex",alignItems:"center",justifyContent:"center",width:"60%",height:"60%",borderRadius:"50%",backgroundColor:"#82c91e"},samplePosition:{margin:0,fontSize:"0.9em",fontFamily:"monospace"},sampleDirection:{margin:0,fontSize:"1.3em"},type:{fontFamily:"Georgia",textDecoration:"underline"},title:{fontWeight:600,fontStyle:"italic",textDecoration:"none"},symbol:{paddingLeft:"0.5em",paddingRight:"0.5em"},literal:{fontFamily:"monospace",textDecoration:"none"}},ht=function(){return Object(i.b)("span",{css:Object(o.a)([yt.symbol,{paddingLeft:"1em",paddingRight:"1em",fontSize:"0.9em",color:"#aaa"}],"")},"|")},xt=function(){return Object(i.b)("span",{css:Object(o.a)([yt.symbol],"")},"⇐")},kt=function(){return Object(i.b)("span",{css:Object(o.a)([yt.symbol],"")},"⨉")},gt=Object(ft.a)("div",{target:"e419np00"})({name:"rqf053",styles:"position:absolute;top:0;right:0;bottom:0;left:0;border-radius:50%;background-color:#f1f3f5;"}),vt=Object(ft.a)("div",{target:"e419np01"})({name:"lzkk8e",styles:"position:absolute;top:20%;right:20%;bottom:20%;left:20%;border-radius:50%;background-color:#82c91e;"}),wt=Object(ft.a)("div",{target:"e419np02"})({name:"1cqk70i",styles:"position:absolute;top:50%;left:50%;margin:0;width:35%;font-size:0.9em;font-family:monospace;cursor:default;transform:translate(-50%,-100%);"}),Ct=Object(ft.a)("div",{target:"e419np03"})({name:"19yg38d",styles:"position:absolute;top:50%;left:50%;margin:0;width:35%;cursor:default;transform:translateX(-50%);"}),St=function(){var t,e,n,c;return Object(i.b)("div",{css:Object(o.a)([yt.container],"")},Object(i.b)("div",null,Object(i.b)("p",null,Object(i.b)("span",{css:Object(o.a)([yt.type,yt.title],"")},"World"),Object(i.b)(xt,null),Object(i.b)("span",{css:Object(o.a)([yt.type],"")},"Snake")),Object(i.b)("p",null,Object(i.b)("span",{css:Object(o.a)([yt.type,yt.title],"")},"Snake"),Object(i.b)(xt,null),Object(i.b)("span",{css:Object(o.a)([yt.type],"")},"Position"),Object(i.b)(kt,null),Object(i.b)("span",{css:Object(o.a)([yt.type],"")},"Direction")),Object(i.b)("p",null,Object(i.b)("span",{css:Object(o.a)([yt.type,yt.title],"")},"Position"),Object(i.b)(xt,null),Object(i.b)("span",{css:Object(o.a)([yt.type],"")},"number"),Object(i.b)(kt,null),Object(i.b)("span",{css:Object(o.a)([yt.type],"")},"number")),Object(i.b)("p",null,Object(i.b)("span",{css:Object(o.a)([yt.type,yt.title],"")},"Direction"),Object(i.b)(xt,null),Object(i.b)("span",{css:Object(o.a)([yt.type,yt.literal],"")},"↑"),Object(i.b)(ht,null),Object(i.b)("span",{css:Object(o.a)([yt.type,yt.literal],"")},"→"),Object(i.b)(ht,null),Object(i.b)("span",{css:Object(o.a)([yt.type,yt.literal],"")},"↓"),Object(i.b)(ht,null),Object(i.b)("span",{css:Object(o.a)([yt.type,yt.literal],"")},"←"))),Object(i.b)("div",{css:Object(o.a)([yt.sample],"")},Object(i.b)(gt,null),Object(i.b)(vt,null),Object(i.b)(wt,null,"(5, 7)"),Object(i.b)(Ct,null,"→"),Object(i.b)("p",{css:Object(o.a)([yt.sampleLabel,(t={},t[gt+":hover ~ &"]={display:"block"},t)],"")},"World"),Object(i.b)("p",{css:Object(o.a)([yt.sampleLabel,(e={},e[vt+":hover ~ &"]={display:"block"},e)],"")},"Snake"),Object(i.b)("p",{css:Object(o.a)([yt.sampleLabel,(n={},n[wt+":hover ~ &"]={display:"block"},n)],"")},"Position"),Object(i.b)("p",{css:Object(o.a)([yt.sampleLabel,(c={},c[Ct+":hover ~ &"]={display:"block"},c)],"")},"Direction")))},Wt={name:"46q2ao",styles:"position:relative;padding-bottom:100%;width:100%;height:0;border:1px solid #ced4da;background-color:#f1f3f5;"},Et={name:"czfdfv",styles:"margin:0.3em 0 0;text-align:center;font-size:0.9em;"},Lt=function(){return Object(i.b)("div",null,Object(i.b)("div",{css:Wt}),Object(i.b)("p",{css:Et},"빈 무대"))},Tt={name:"46q2ao",styles:"position:relative;padding-bottom:100%;width:100%;height:0;border:1px solid #ced4da;background-color:#f1f3f5;"},At={name:"czfdfv",styles:"margin:0.3em 0 0;text-align:center;font-size:0.9em;"},It=function(){return Object(i.b)("div",null,Object(i.b)("div",{css:Tt},Object(i.b)("div",{style:{position:"absolute",width:"5%",height:"5%",left:"25%",top:"35%",borderRadius:"50%",backgroundColor:"#5c940d"}})),Object(i.b)("p",{css:At},"멈춰있는 뱀"))},Rt=n(7),Dt=n.n(Rt),Nt=n(172),zt=n.n(Nt),Pt=function(t,e,n){return{snake:t,food:e,status:n}},Mt=function(t,e){return{positions:t,direction:e}},Kt=function(t,e){return{x:t,y:e}},Ft="up",Gt="right",Ht="down",_t="left",Ut=Mt([Kt(3,3)],Gt),Zt=Pt(Ut,Kt(15,18),0),Bt={tick:"tick",up:"up",down:"down",left:"left",right:"right"},Vt=function(t,e){if(void 0===t&&(t=Zt),!e)return t;switch(e){case Bt.tick:if(2===t.status)return t;var n=t.snake,o=n.positions,i=[qt(o[0],n.direction)].concat(o.slice(0,o.length-1)),c=Mt(i,n.direction);if(Jt(c))return Zt;var r=t.food;return Pt(c,r,1);case Bt.up:return t.snake.direction===Ht?t:Pt(Mt(t.snake.positions,Ft),t.food,t.status);case Bt.down:return t.snake.direction===Ft?t:Pt(Mt(t.snake.positions,Ht),t.food,t.status);case Bt.left:return t.snake.direction===Gt?t:Pt(Mt(t.snake.positions,_t),t.food,t.status);case Bt.right:return t.snake.direction===_t?t:Pt(Mt(t.snake.positions,Gt),t.food,t.status);default:return t}},qt=function(t,e){var n=t.x,o=t.y;return e===Ft?o-=1:e===Gt?n+=1:e===Ht?o+=1:e===_t&&(n-=1),Kt(n,o)},Jt=function(t){return Xt(t)||Yt(t)},Xt=function(t){var e=t.positions[0];return e.x>=40||e.y>=40||e.x<-20||e.y<-20},Yt=function(t){return t.positions.slice(1).some(function(e){return Qt(e,t.positions[0])})},Qt=function(t,e){return t.x===e.x&&t.y===e.y},$t={name:"czfdfv",styles:"margin:0.3em 0 0;text-align:center;font-size:0.9em;"},te=function(t){function e(){for(var e,n=arguments.length,o=new Array(n),i=0;i<n;i++)o[i]=arguments[i];return(e=t.call.apply(t,[this].concat(o))||this).intervalID=0,e.state=Vt(),e.handleTick=function(){e.setState(function(t){return Vt(t,Bt.tick)})},e.handleKey=function(t){t.preventDefault();var n=t.key,o=null;"ArrowUp"===n||"k"===n?o=Bt.up:"ArrowRight"===n||"l"===n?o=Bt.right:"ArrowDown"===n||"j"===n?o=Bt.down:"ArrowLeft"!==n&&"h"!==n||(o=Bt.left),o&&e.setState(function(t){return Vt(t,o)})},e.handlePlayClick=function(){e.setState(Pt(Zt.snake,Zt.food,1))},e.handleContinueClick=function(){e.uninstallKeyHandler(),e.uninstallTimer(),e.setState(Zt)},e}Dt()(e,t);var n=e.prototype;return n.componentWillUnmount=function(){this.uninstallTimer()},n.componentDidUpdate=function(t,e){2!==e.status&&2===this.state.status?this.uninstallTimer():1!==e.status&&1===this.state.status?this.installTimer():0!==e.status&&0===this.state.status&&this.uninstallTimer()},n.installTimer=function(){this.uninstallTimer(),this.intervalID=setInterval(this.handleTick,90)},n.uninstallTimer=function(){this.intervalID&&clearInterval(this.intervalID)},n.installKeyHandler=function(){this.uninstallKeyHandler(),document.addEventListener("keydown",this.handleKey)},n.uninstallKeyHandler=function(){document.removeEventListener("keydown",this.handleKey)},n.render=function(){return Object(i.b)(r.a.Fragment,null,Object(i.b)(ee,{world:this.state,onClickPlay:this.handlePlayClick,onClickContinue:this.handleContinueClick}),Object(i.b)("p",{css:$t},"움직이는 뱀"))},e}(r.a.Component),ee=function(t){var e=t.world,n=t.onClickPlay,c=t.onClickContinue;return Object(i.b)("div",{css:Object(o.a)({position:"relative",paddingBottom:"100%",width:"100%",height:0,border:"1px solid #ced4da",backgroundColor:"#f1f3f5"},"")},Object(i.b)(de,{snake:e.snake}),Object(i.b)(oe,{status:e.status,onClickPlay:n,onClickContinue:c}))},ne={name:"1hrci7v",styles:"position:absolute;top:0;right:0;bottom:0;left:0;display:flex;flex-direction:column;align-items:center;justify-content:center;letter-spacing:0.1em;"},oe=function(t){var e=t.status,n=t.onClickPlay,o=t.onClickContinue;return Object(i.b)("div",{css:ne},0===e&&Object(i.b)(re,{onClick:n}),2===e&&Object(i.b)(be,{onClick:o}))},ie={name:"mpa8ru",styles:"margin:0;padding:0;outline:none;border:none;width:100%;height:100%;letter-spacing:0.1em;font-size:0.8em;background-color:transparent;cursor:pointer;:hover{border-color:#aaa;}"},ce={name:"shmi0w",styles:"padding:0.6em 0.9em;border:1px solid #ccc;border-radius:5px;background-color:white;button:hover &{border:1px solid #aaa;}"},re=function(t){var e=t.onClick;return Object(i.b)(r.a.Fragment,null,Object(i.b)("button",{css:ie,onClick:e},Object(i.b)("span",{css:ce},"START")))},le={name:"1rx89dk",styles:"display:flex;flex-direction:column;align-items:center;justify-content:center;margin:0;padding:0;outline:none;border:none;width:100%;height:100%;letter-spacing:0.1em;font-size:0.8em;cursor:pointer;background-color:transparent;:hover{border-color:#aaa;}"},se={name:"1ovh8xz",styles:"margin:0 0 0.5em 0;font-size:1.5em;font-family:Georgia;font-style:italic;"},ae={name:"shmi0w",styles:"padding:0.6em 0.9em;border:1px solid #ccc;border-radius:5px;background-color:white;button:hover &{border:1px solid #aaa;}"},be=function(t){var e=t.onClick;return Object(i.b)("button",{css:le,onClick:e},Object(i.b)("p",{css:se},"Game Over"),Object(i.b)("span",{css:ae},"INSERT COIN TO CONTINUE"))},de=function(t){var e=t.snake;return Object(i.b)(r.a.Fragment,null,e.positions.map(function(t,e){return Object(i.b)(ue,{key:e,x:t.x,y:t.y})}))},ue=function(t){var e=t.x,n=t.y,c=t.food,r=void 0!==c&&c;return Object(i.b)("div",{css:Object(o.a)({position:"absolute",left:e/20*100+"%",top:n/20*100+"%",marginLeft:-1,marginTop:-1,width:"6%",height:"6%",border:"2px solid #f1f3f5",borderRadius:"50%"},""),style:{backgroundColor:r?"#ffa8a8":"#5c940d"}})},je=te,Oe={name:"1ilq4hf",styles:"font-family:Georgia;font-style:italic;"},fe={name:"1ilq4hf",styles:"font-family:Georgia;font-style:italic;"},pe={name:"1ilq4hf",styles:"font-family:Georgia;font-style:italic;"},me={name:"1ilq4hf",styles:"font-family:Georgia;font-style:italic;"},ye={name:"1ilq4hf",styles:"font-family:Georgia;font-style:italic;"},he=function(t){t.title,t.title1;return Object(i.b)(b,{number:2,title:"데이터"},Object(i.b)(u,null,"프로그램을 만들려면 프로그램에 존재하는 요소들의 데이터를 코드로 표현해야 합니다. 그러기 위해서 게임 상에서 ",Object(i.b)(O,{text:"변하지 않는 정보"}),Object(i.b)(f,{very:!0,text:"Constants"}),"와 ",Object(i.b)(O,{text:"변하는 정보"}),Object(i.b)(f,{very:!0,text:"State"}),"를 찾아낸 후, 각각을 코드로 옮기도록 하겠습니다. 위에서 그렸던 그림을 살펴보면 우리가 코드로 표현해야 할 것들이 크게 세 가지가 있습니다."),Object(i.b)("ul",null,Object(i.b)("li",null,"무대 — 옅은 회색의 사각형"),Object(i.b)("li",null,"뱀 — 검은 원 여러 개가 이어진 형태"),Object(i.b)("li",null,"먹이 — 붉은 원")),Object(i.b)(u,null,"나란히 놓인 그림 세 장에서 알 수 있듯이, 게임이 진행되는 동안 무대는 항상 그대로이고, 먹이의 색과 크기, 뱀을 구성하는 원들의 색과 크기도 변하지 않습니다. 반면 뱀의 길이와 위치, 진행 방향은 동일하지 않고, 먹이의 위치도 제각각입니다."),Object(i.b)("div",{style:{display:"flex"}},Object(i.b)(N,null,Object(i.b)(K,{margin:"5.5em 0 1.5em"},Object(i.b)(Ot,null))),Object(i.b)(P,null,Object(i.b)(W,{number:"2.1",text:"변하지 않는 것"}),Object(i.b)(u,null,"우선 변하지 않는 것들의 값을 ",Object(i.b)(O,{text:"상수"}),Object(i.b)(f,{very:!0,text:"Constants"}),"로 정의합니다. 이 상수들을 정의하기 위해 다음과 같은 무대의 성질을 임의로 정합니다."),Object(i.b)("ul",null,Object(i.b)("li",null,"게임 무대는 정사각형이다."),Object(i.b)("li",null,"게임 무대의 가로/세로는 각각 스무칸 씩이다.")),Object(i.b)(w,{startingLineNumber:3,changed:[3,33],code:"// ===========================\n// Constants\n// ===========================\n\n// string\n// 무대의 배경색\nconst SCENE_COLOR = '#f1f3f5'\n\n// string\n// 뱀의 색\nconst SNAKE_COLOR = '#5c940d'\n\n// string\n// 먹이의 색\nconst FOOD_COLOR = '#ff8787'\n\n// number\n// 무대의 가로/세로 길이 (단위: px)\n//   * SCENE_SIZE = SCENE_COUNT x CELL_SIZE\n//   * 500 = 20 * 25\nconst SCENE_SIZE = 500\n\n// number\n// 무대의 한 열에 들어가는 칸 수\n//   * 20 = 500 / 25\nconst SCENE_COUNT = 20\n\n// number\n// 먹이와 뱀 몸통 한 칸의 가로/세로 길이 (단위: px)\n//   * 25 = 500 / 20\nconst CELL_SIZE = 25\n\n// number\n// 뱀 이동 시간 간격 (단위: ms)\nconst INTERVAL = 500\n"}),Object(i.b)(u,null,"길이와 관련된 값들은 게임 무대의 가로와 세로가 각각 스무 칸인 정사각형이어야 한다는 임의의 결정을 전제로 정의되었습니다. 그래서 무대의 가로 길이와 세로 길이가 하나의 동일한 값으로 표현되었고,"," "," ",Object(i.b)(A,{code:"CELL_SIZE"}),"는 ",Object(i.b)(A,{code:"SCENE_SIZE"})," ","500을 20으로 나눈 값이 되었습니다."))),Object(i.b)("div",{style:{display:"flex"}},Object(i.b)(N,null,Object(i.b)(K,{margin:"5.5em 0 1.5em"},Object(i.b)(St,null))),Object(i.b)(P,null,Object(i.b)(W,{number:"2.2",text:"변하는 것"}),Object(i.b)(u,null,"변화하는 데이터들은 게임의"," ",Object(i.b)(O,{text:"상태"}),Object(i.b)(f,{very:!0,text:"State"}),"가 됩니다. 앞서 그림을 보면서 찾아낸 상태 데이터는 총 네 개가 있었습니다. 하지만 우리는 지금 머리 하나만 움직여볼 것이기 때문에 뱀의 길이와 먹이의 위치는 제외하고, 뱀의 위치와 뱀의 진행 방향 데이터만 생각하겠습니다."),Object(i.b)(u,null,"한 칸짜리 뱀만 존재하는 이 게임 세계의 상태를 아래처럼"," ",Object(i.b)(R,{text:"World"}),"라는 형식의 객체로 표현할 수 있습니다."),Object(i.b)(w,{startingLineNumber:35,changed:[35,77],code:"// ===========================\n// Data Definitions\n// ===========================\n\n// A World is an object:\n//  {\n//    snake: Snake,\n//  }\n//    * snake: 뱀의 상태 (위치, 방향)\n\n// A Snake is an object:\n//   {\n//     position:  Position,\n//     direction: Direction,\n//   }\n//     * position:  뱀의 위치\n//     * direction: 뱀의 진행 방향\n\n// A Position is an object:\n//   {\n//     x: number,\n//     y: number,\n//   }\n//     * x: 가로 좌표. 왼쪽 끝에서 0으로 시작해서 오른쪽으로 갈수록 커진다.\n//     * y: 세로 좌표. 위쪽 끝에서 0으로 시작해서 아래쪽으로 갈수록 커진다.\n\n// A Direction is one of:\n//   - 'up'\n//   - 'down'\n//   - 'left'\n//   - 'right'\n\n// Snake -> World\n// Given a snake, produces a world.\nconst world = snake => ({ snake })\n\n// Position * Direction -> Snake\n// Given a position and a direction, produces a snake.\nconst snake = (position, direction) => ({ position, direction })\n\n// number * number -> Position\n// Given x and y coordinates, produces a position.\nconst position = (x, y) => ({ x, y })"}),Object(i.b)(u,null,"위의 코드에서는 주석을 통해 게임 상태를 표현하는 데이터 형식들을 정의하고 있습니다. (이 튜토리얼에서는 주석도 프로그램의 일부로 보아주기 바랍니다.)"),Object(i.b)(T,{number:"2.2.가",text:Object(i.b)("span",{css:Oe},"World")}),Object(i.b)(u,null,"먼저 게임의 전체 상태를 표현하는"," ",Object(i.b)(R,{text:"World"}),"는 한 개의 필드를 가진 객체로 정의합니다. 이 데이터 형식 안에 게임에 필요한 모든 상태 정보가 들어가야 합니다."),Object(i.b)("ul",null,Object(i.b)("li",null,Object(i.b)(A,{code:"snake"}),": 뱀의 상태 (머리의 위치, 방향)")),Object(i.b)(u,null,"다음으로 ",Object(i.b)(R,{text:"World"}),"를 구성하는 데에 필요한 나머지 데이터 형식들을 정의합니다."),Object(i.b)(T,{number:"2.2.나",text:Object(i.b)("span",{css:fe},"Snake")}),Object(i.b)(u,null,"뱀의 상태를 표현하는 ",Object(i.b)(R,{text:"Snake"}),"는 각각 위치와 방향 정보를 나타내는 두 개의 필드를 가진 객체로 정의합니다. 이 두 개의 정보가 있으면 우리는 무대에 뱀을 어떻게 배치할지 판단할 수 있습니다."),Object(i.b)("ul",null,Object(i.b)("li",null,Object(i.b)(A,{code:"position"}),": 뱀 머리의 위치"),Object(i.b)("li",null,Object(i.b)(A,{code:"direction"}),": 뱀의 진행 방향")),Object(i.b)(T,{number:"2.2.다",text:Object(i.b)("span",{css:pe},"Position")}),Object(i.b)(u,null,"위치를 표현하는 ",Object(i.b)(R,{text:"Position"}),"은 각각 해당 좌표를 나타내는"," ",Object(i.b)(A,{code:"x"}),", ",Object(i.b)(A,{code:"y"})," 필드를 가진 객체입니다."," "," 우리는 게임 무대에 놓일 뱀의 몸통을 단순한 좌표값으로 보고 있습니다."),Object(i.b)("ul",null,Object(i.b)("li",null,Object(i.b)(A,{code:"x"}),": ",Object(i.b)(f,{text:"x"})," 좌표"),Object(i.b)("li",null,Object(i.b)(A,{code:"y"}),": ",Object(i.b)(f,{text:"y"})," 좌표")),Object(i.b)(T,{number:"2.2.라",text:Object(i.b)("span",{css:me},"Direction")}),Object(i.b)(u,null,"방향을 표현하는 ",Object(i.b)(R,{text:"Direction"}),"은"," ",Object(i.b)(A,{code:"'up'"}),", ",Object(i.b)(A,{code:"'down'"}),","," ",Object(i.b)(A,{code:"'left'"}),","," ",Object(i.b)(A,{code:"'right'"})," 네 개 중 하나의 값을 갖습니다."),Object(i.b)(T,{number:"2.2.마",text:Object(i.b)(r.a.Fragment,null,Object(i.b)("span",{css:ye},"World")," ","예시")}),Object(i.b)(u,null,"데이터 정의와 설명이 복잡하게 보였다면 코드로 ",Object(i.b)(R,{text:"World"}),"의 예시값을 한 번 만들어볼까요?"),Object(i.b)(w,{hideFilename:!0,showLineNumbers:!1,code:"// Snake\nconst exampleSnake = snake(position(5, 7), 'right')\n\n// World\nconst exampleWorld = world(exampleSnake)\n// ==> {\n//       snake: {\n//         position: {\n//           x: 5,\n//           y: 7,\n//         },\n//         direction: 'right',\n//       },\n//     }\n"}),Object(i.b)(u,null,"우리가 시도 중인 초기 버전 게임에서, 어느 한 시점의 상태는 두 줄만으로 간단하게 표현이 됩니다. 뱀은 왼쪽으로부터 여섯 번째, 위쪽으로부터 여덟 번째 칸에 위치해있고, 진행 방향은 오른쪽입니다. 이 상태값으로 판단해보면 뱀의 다음 위치는 ",Object(i.b)(A,{code:"(6, 7)"}),"이 되겠죠?"))))},xe=function(t){t.title,t.title1;return Object(i.b)(b,{number:3,title:"렌더링"},Object(i.b)(u,null,"지금까지 상태 데이터들의 형식을 정의했습니다. 이제 렌더링, 즉 표현을 고민해 볼 단계입니다. 우리는 이미 게임에 필요한 모든 데이터를 정의해놓았기 때문에 상태에서 표현으로 넘어가는 과정을 최대한 단순하게 볼 필요가 있습니다. 짧게 요약하자면, 여기서 해야 할 일은"," ","게임의 상태 정보인 ",Object(i.b)(f,{very:!0,text:"World"}),"를 표현을 담당하는"," ",Object(i.b)(f,{text:"React"})," 컴포넌트에게 전달해주는 것입니다."),Object(i.b)("div",{style:{display:"flex"}},Object(i.b)(N,null,Object(i.b)(K,{margin:"5.5em 0 1.5em"},Object(i.b)(Lt,null))),Object(i.b)(P,null,Object(i.b)(W,{number:"3.1",text:Object(i.b)("span",{css:Object(o.a)({fontFamily:'Consolas, Menlo, Monaco, "Andale Mono WT", "Andale Mono", "Lucida Console", "Lucida Sans Typewriter", "DejaVu Sans Mono", "Bitstream Vera Sans Mono", "Liberation Mono", "Nimbus Mono L", "Courier New", Courier, monospace'},"")},"<Scene />")}),Object(i.b)(u,null,"아직 렌더링 관련 코드는 하나도 쓰지 않았지만, 조금 앞서나가서 ",Object(i.b)(R,{text:"World"})," ","데이터를 넘겨주면 화면에 게임 무대를 표시하는 ",Object(i.b)(A,{code:"Scene"})," 컴포넌트가 이미 만들어져 있다고 한 번 생각해볼까요? 만약 그렇다면 그 컴포넌트에 변화하는 상태 데이터를 계속해서 넘겨주기만 하면 데이터를 반영하도록 화면이 갱신될 겁니다. 희망사항을 반영해서 코드를 써 보면 다음과 같습니다."),Object(i.b)(w,{hideFilename:!0,startingLineNumber:79,code:"// Snake\n// 뱀의 최초 상태\nconst initialSnake = snake(position(10, 10)), 'right')\n\n// World\n// 게임 세계의 최초 상태\nconst initialWorld = world(initialSnake)\n\nclass Game extends React.Component {\n  // World\n  state = initialWorld\n\n  // -> ReactElement\n  render () {\n    return (\n      <Scene world={this.state} />\n    )\n  }\n}\n\n// World -> ReactElement\nconst Scene = world => (\n  <div>\n  </div>\n)"}),Object(i.b)(u,null,"우선 뱀의 위치는 화면 중앙이고 진행 방향은 오른쪽인 ",Object(i.b)(A,{code:"initialWorld"}),"를 만든 다음, ",Object(i.b)(A,{code:"Game"})," 컴포넌트의 ",Object(i.b)(f,{text:"state"}),"로 배정했습니다. 이 ",Object(i.b)(f,{text:"state"}),"가 바뀔 때마다 아래 쪽"," ",Object(i.b)(A,{code:"render"})," 함수 안의 ",Object(i.b)(A,{code:"Scene"})," 컴포넌트가 상태값을 반영해 화면을 갱신하게 됩니다. 아직"," "," ",Object(i.b)(A,{code:"Scene"})," 컴포넌트는 작성하지 않았기 때문에 오류가 나지 않도록 허수아비만 세워놓은 상태지만 입력받은 ",Object(i.b)(A,{code:"world"})," 안의 데이터를 화면에 표시하는 역할을 하게 될 겁니다. 이제 무대의 배경부터 표시해 볼까요?"),Object(i.b)(w,{code:"// World -> ReactElement\nconst Scene = world => (\n  <div\n    style={{\n      position: 'relative',\n      width: SCENE_SIZE,\n      height: SCENE_SIZE,\n      backgroundColor: SCENE_COLOR,\n    }}\n  >\n  </div>\n)"}),Object(i.b)(u,null,"화면에 출력된 네모난 회색 박스가 게임의 무대입니다. 이제 무대를 채워볼 시간입니다."))),Object(i.b)("div",{style:{display:"flex"}},Object(i.b)(N,null,Object(i.b)(K,{margin:"5.5em 0 1.5em"},Object(i.b)(It,null))),Object(i.b)(P,null,Object(i.b)(W,{number:"3.2",text:Object(i.b)("span",{css:Object(o.a)({fontFamily:'Consolas, Menlo, Monaco, "Andale Mono WT", "Andale Mono", "Lucida Console", "Lucida Sans Typewriter", "DejaVu Sans Mono", "Bitstream Vera Sans Mono", "Liberation Mono", "Nimbus Mono L", "Courier New", Courier, monospace'},"")},"<Snake />")}),Object(i.b)(u,null,"뱀을 표시하는 것도 방금 무대를 표시했던 것과 크게 다르지 않습니다. 상태값에 영향을 받지 않는 무대는 상수만으로 그릴 수 있었던 반면, 뱀은 상태값이 필요하다는 차이점이 있긴 하지만요. 이번에도 무대를 그릴 때 했던 것처럼, 있었으면 하는 ",Object(i.b)(A,{code:"Snake"})," 컴포넌트를 먼저 한 번 상상해보겠습니다."),Object(i.b)(w,{code:"// World -> ReactElement\nconst Scene = world => (\n  <div\n    style={{\n      position: 'relative',\n      width: SCENE_SIZE,\n      height: SCENE_SIZE,\n      backgroundColor: SCENE_COLOR,\n    }}\n  >\n    <Snake snake={world.snake} />\n  </div>\n)\n\n// Snake -> ReactElement\nconst Snake = snake => <div></div>"}),Object(i.b)(u,null,"희망사항을 코드로 구현해봅시다."," ",Object(i.b)(A,{code:"Snake"})," 컴포넌트는 입력 받은 ",Object(i.b)(A,{code:"snake"}),"의"," ",Object(i.b)(A,{code:"position"})," 값을 이용해 무대 위의 해당 위치에 뱀을 표시하는 역할을 합니다."," ",Object(i.b)(A,{code:"position.x"})," 값으로 무대 왼쪽으로부터의 거리,"," ",Object(i.b)(A,{code:"position.y"})," 값으로 무대 위쪽으로부터의 거리를 계산할 수 있습니다."),Object(i.b)(w,{code:"// Snake -> ReactElement\nconst Snake = snake => (\n  <div\n    style={{\n      position: 'absolute',\n      left: snake.position.x * CELL_SIZE,\n      top: snake.position.y * CELL_SIZE,\n      width: CELL_SIZE,\n      height: CELL_SIZE,\n      borderRadius: CELL_SIZE / 2,\n      backgroundColor: SNAKE_COLOR,\n    }}\n  >\n  </div>\n)"}))))},ke=function(t,e,n){return{snake:t,food:e,status:n}},ge=function(t,e){return{positions:t,direction:e}},ve=function(t,e){return{x:t,y:e}},we="up",Ce="right",Se="down",We="left",Ee=ge([ve(3,3)],Ce),Le=ke(Ee,ve(15,18),0),Te={tick:"tick",up:"up",down:"down",left:"left",right:"right"},Ae=function(t,e){if(void 0===t&&(t=Le),!e)return t;switch(e){case Te.tick:if(2===t.status)return t;var n=t.snake,o=n.positions,i=[Ie(o[0],n.direction)].concat(o.slice(0,o.length-1)),c=ge(i,n.direction);if(Re(c))return Le;var r=t.food;return ke(c,r,1);case Te.up:return t.snake.direction===Se?t:ke(ge(t.snake.positions,we),t.food,t.status);case Te.down:return t.snake.direction===we?t:ke(ge(t.snake.positions,Se),t.food,t.status);case Te.left:return t.snake.direction===Ce?t:ke(ge(t.snake.positions,We),t.food,t.status);case Te.right:return t.snake.direction===We?t:ke(ge(t.snake.positions,Ce),t.food,t.status);default:return t}},Ie=function(t,e){var n=t.x,o=t.y;return e===we?o-=1:e===Ce?n+=1:e===Se?o+=1:e===We&&(n-=1),ve(n,o)},Re=function(t){return De(t)||Ne(t)},De=function(t){var e=t.positions[0];return e.x>=40||e.y>=40||e.x<-20||e.y<-20},Ne=function(t){return t.positions.slice(1).some(function(e){return ze(e,t.positions[0])})},ze=function(t,e){return t.x===e.x&&t.y===e.y},Pe={name:"czfdfv",styles:"margin:0.3em 0 0;text-align:center;font-size:0.9em;"},Me=function(t){function e(){for(var e,n=arguments.length,o=new Array(n),i=0;i<n;i++)o[i]=arguments[i];return(e=t.call.apply(t,[this].concat(o))||this).intervalID=0,e.state=Ae(),e.handleTick=function(){e.setState(function(t){return Ae(t,Te.tick)})},e.handleKey=function(t){t.preventDefault();var n=t.key,o=null;"ArrowUp"===n||"k"===n?o=Te.up:"ArrowRight"===n||"l"===n?o=Te.right:"ArrowDown"===n||"j"===n?o=Te.down:"ArrowLeft"!==n&&"h"!==n||(o=Te.left),o&&e.setState(function(t){return Ae(t,o)})},e.handlePlayClick=function(){e.setState(ke(Le.snake,Le.food,1))},e.handleContinueClick=function(){e.uninstallKeyHandler(),e.uninstallTimer(),e.setState(Le)},e}Dt()(e,t);var n=e.prototype;return n.componentWillUnmount=function(){this.uninstallKeyHandler(),this.uninstallTimer()},n.componentDidUpdate=function(t,e){2!==e.status&&2===this.state.status?(this.uninstallKeyHandler(),this.uninstallTimer()):1!==e.status&&1===this.state.status?(this.installKeyHandler(),this.installTimer()):0!==e.status&&0===this.state.status&&(this.uninstallKeyHandler(),this.uninstallTimer())},n.installTimer=function(){this.uninstallTimer(),this.intervalID=setInterval(this.handleTick,90)},n.uninstallTimer=function(){this.intervalID&&clearInterval(this.intervalID)},n.installKeyHandler=function(){this.uninstallKeyHandler(),document.addEventListener("keydown",this.handleKey)},n.uninstallKeyHandler=function(){document.removeEventListener("keydown",this.handleKey)},n.render=function(){return Object(i.b)(r.a.Fragment,null,Object(i.b)(Ke,{world:this.state,onClickPlay:this.handlePlayClick,onClickContinue:this.handleContinueClick}),Object(i.b)("p",{css:Pe},"방향키로 조작할 수 있는 뱀"))},e}(r.a.Component),Ke=function(t){var e=t.world,n=t.onClickPlay,c=t.onClickContinue;return Object(i.b)("div",{css:Object(o.a)({position:"relative",paddingBottom:"100%",width:"100%",height:0,border:"1px solid #ced4da",backgroundColor:"#f1f3f5"},"")},Object(i.b)(Je,{snake:e.snake}),Object(i.b)(Ge,{status:e.status,onClickPlay:n,onClickContinue:c}))},Fe={name:"1hrci7v",styles:"position:absolute;top:0;right:0;bottom:0;left:0;display:flex;flex-direction:column;align-items:center;justify-content:center;letter-spacing:0.1em;"},Ge=function(t){var e=t.status,n=t.onClickPlay,o=t.onClickContinue;return Object(i.b)("div",{css:Fe},0===e&&Object(i.b)(Ue,{onClick:n}),2===e&&Object(i.b)(qe,{onClick:o}))},He={name:"mpa8ru",styles:"margin:0;padding:0;outline:none;border:none;width:100%;height:100%;letter-spacing:0.1em;font-size:0.8em;background-color:transparent;cursor:pointer;:hover{border-color:#aaa;}"},_e={name:"shmi0w",styles:"padding:0.6em 0.9em;border:1px solid #ccc;border-radius:5px;background-color:white;button:hover &{border:1px solid #aaa;}"},Ue=function(t){var e=t.onClick;return Object(i.b)(r.a.Fragment,null,Object(i.b)("button",{css:He,onClick:e},Object(i.b)("span",{css:_e},"START")))},Ze={name:"1rx89dk",styles:"display:flex;flex-direction:column;align-items:center;justify-content:center;margin:0;padding:0;outline:none;border:none;width:100%;height:100%;letter-spacing:0.1em;font-size:0.8em;cursor:pointer;background-color:transparent;:hover{border-color:#aaa;}"},Be={name:"1ovh8xz",styles:"margin:0 0 0.5em 0;font-size:1.5em;font-family:Georgia;font-style:italic;"},Ve={name:"shmi0w",styles:"padding:0.6em 0.9em;border:1px solid #ccc;border-radius:5px;background-color:white;button:hover &{border:1px solid #aaa;}"},qe=function(t){var e=t.onClick;return Object(i.b)("button",{css:Ze,onClick:e},Object(i.b)("p",{css:Be},"Game Over"),Object(i.b)("span",{css:Ve},"INSERT COIN TO CONTINUE"))},Je=function(t){var e=t.snake;return Object(i.b)(r.a.Fragment,null,e.positions.map(function(t,e){return Object(i.b)(Xe,{key:e,x:t.x,y:t.y})}))},Xe=function(t){var e=t.x,n=t.y,c=t.food,r=void 0!==c&&c;return Object(i.b)("div",{css:Object(o.a)({position:"absolute",left:e/20*100+"%",top:n/20*100+"%",marginLeft:-1,marginTop:-1,width:"6%",height:"6%",border:"2px solid #f1f3f5",borderRadius:"50%"},""),style:{backgroundColor:r?"#ffa8a8":"#5c940d"}})},Ye=Me,Qe=function(t){t.title,t.title1;return Object(i.b)(b,{number:4,title:"액션"},Object(i.b)("div",{style:{display:"flex"}},Object(i.b)(N,null,Object(i.b)(K,{margin:"5.5em 0 1.5em"},Object(i.b)(je,null))),Object(i.b)(P,null,Object(i.b)(W,{number:"4.1",text:"움직이는 뱀"}),Object(i.b)(u,null,"이제 우리는 뱀을 움직여보려고 합니다. 뱀이 지금까지 가만히 멈춰만 있었던 이유는"," ",Object(i.b)(R,{text:"World"}),"에 아무런 변동이 없었기 때문입니다. 이 게임에서 뱀은 일정 시간 간격으로 한 칸씩 전진해야 하므로, 계속해서 상태를 바꿔 줄 필요가 있습니다. 아이디어는 간단합니다. 일정 시간 간격으로 뱀의 위치가 업데이트된 새로운"," ",Object(i.b)(R,{text:"World"}),"를 만들어, 그걸로 기존"," ",Object(i.b)(R,{text:"World"}),"를 교체하는 것입니다. 좀 전에 우리가 만든"," ",Object(i.b)(A,{code:"Scene"})," 컴포넌트에게 새 ",Object(i.b)(R,{text:"World"}),"를 넘겨주면 화면을 갱신하는 일은 알아서 해 줄 겁니다. 마치 스톱 모션 애니메이션처럼 말이죠."),Object(i.b)(u,null,"일정 시간 간격이 지나 뱀이 앞으로 한 칸 움직여야 할 때, 기존"," ",Object(i.b)(R,{text:"World"})," 데이터를 바탕으로 뱀의 위치가 업데이트된 새로운"," ",Object(i.b)(R,{text:"World"}),"를 만들 수 있습니다. 이 아이디어를"," ",Object(i.b)(A,{code:"nextWorld"}),"라는 함수로 표현해볼까요? 일단 새"," ",Object(i.b)(R,{text:"World"}),"를 만드는 로직은 비워두고 언제나 기존"," ",Object(i.b)(R,{text:"World"}),"와 똑같은 복사본을 만들어 반환하도록 합니다."),Object(i.b)(w,{hideFilename:!0,code:"// An Action is one of:\n//   - 'tick'"}),Object(i.b)(w,{code:"// World * Action -> World\nconst nextWorld = (oldWorld, action) => {\n  if (action === 'tick') {\n    // World\n    const newWorld = world(oldWorld.snake)\n\n    return newWorld\n  }\n\n  return oldWorld\n}"}),Object(i.b)(u,null,"우리는 게임의 상태인 ",Object(i.b)(R,{text:"World"}),"를 어떤 식으로든 변경하려고 할 때마다 매번 변경사항이 적용된 새로운"," "," ",Object(i.b)(R,{text:"World"}),"를 만들 것입니다. 이렇게 만들어진 새로운"," "," ",Object(i.b)(R,{text:"World"}),"를 기존의"," ",Object(i.b)(R,{text:"World"}),"와 바꿔치기하는 것으로 상태 변경의 한 사이클이 끝납니다. 위의 "," ",Object(i.b)(A,{code:"nextWorld"}),"는 상태 변경이 필요한 매 순간마다 새 상태를 만들어내기 위해 호출될 함수입니다. 말 그대로 모든 상태 변경은 이"," ",Object(i.b)(A,{code:"nextWorld"}),"를 거쳐갑니다."),Object(i.b)(u,null,"하지만 기존 ",Object(i.b)(R,{text:"World"}),"의 정보만으로는 새로운"," ",Object(i.b)(R,{text:"World"}),"를 만들어내기에 충분하지 않습니다."," ","변경의 의도를 알아야 ",Object(i.b)(R,{text:"World"}),"의 어떤 부분을 어떻게 바꿀 수 있을지 결정할 수 있겠죠? 예를 들면 일정 시간 간격이 지났으니 뱀이 한 칸 앞으로 움직여야 한다던가 하는 식으로요."),Object(i.b)(u,null,"위의 ",Object(i.b)(A,{code:"nextWorld"})," 함수 정의를 보면 기존 ",Object(i.b)(R,{text:"World"})," ","외에 ",Object(i.b)(R,{text:"Action"}),"이라는 것을 같이 받도록 되어 있습니다."," ",Object(i.b)(R,{text:"Action"})," 안에는 상태 변경에 대한 의도가 담겨 있어, 이를 통해 기존의 상태에 어떤 변경사항을 적용해서 새 상태를 만들어내야 할지를 알 수 있습니다. 뱀 게임 세계에는 ",Object(i.b)(R,{text:"Action"}),"을 유발하는, 즉 상태를 업데이트시키는 요인이 크게 두 가지가 있습니다."),Object(i.b)("ul",null,Object(i.b)("li",null,"시간의 경과"),Object(i.b)("li",null,"방향키 입력에 따른 진행 방향 변경")),Object(i.b)(u,null,"위의 코드는 아직 다른 ",Object(i.b)(R,{text:"Action"}),"은 무시하고"," ",Object(i.b)(A,{code:"tick"}),"에 대해서만 새로운 상태를 만들 준비를 하고 있습니다. 이"," ",Object(i.b)(A,{code:"tick"}),"은 뱀이 전진해야 할 시간을 알리는 것이므로 우리는 뱀이 한 칸 전진한 새로운 ",Object(i.b)(R,{text:"World"}),"를 만들어내야 합니다."),Object(i.b)(u,null,"이제 움직이는 뱀이 코 앞에 있습니다! ",Object(i.b)(A,{code:"nextWorld"})," 함수 안에 뱀 위치가 업데이트된 ",Object(i.b)(R,{text:"World"}),"를 만드는 로직을 작성하고, 일정한 시간 간격으로"," ",Object(i.b)(A,{code:"tick"})," 액션을 발생시키는 타이머를 설치하기만 하면 됩니다."),Object(i.b)(w,{code:"/// World * Action -> World\nconst nextWorld = (oldWorld, action) => {\n  if (action === 'tick') {\n    // Snake\n    const oldSnake = oldWorld.snake\n    // Position\n    const newPosition = nextHead(oldSnake.position, oldSnake.direction)\n    // World\n    const newWorld = world(newSnake)\n\n    return newWorld\n  }\n\n  return oldWorld\n}\n\n// Position * Direction -> Position\n// Given a snake's head and a direction, produces a next head.\nconst nextHead = (posn, dir) => {\n  // number\n  let x = posn.x\n  // number\n  let y = posn.y\n\n  if (dir === 'up') {\n    y = y - 1\n  } else if (dir === 'down') {\n    y = y + 1\n  } else if (dir === 'left') {\n    x = x - 1\n  } else if (dir === 'right') {\n    x = x + 1\n  }\n\n  return position(x, y)\n}\n"}),Object(i.b)(u,null,"위 코드에서 뱀의 새로운 위치를 구하기 위해 ",Object(i.b)(A,{code:"nextHead"}),"라는 보조 함수를 사용하고 있습니다. ",Object(i.b)(A,{code:"nextHead"}),"는 현재 진행 방향에 따라"," ",Object(i.b)(A,{code:"x"})," 혹은 ",Object(i.b)(A,{code:"y"})," 좌표값 중 하나의 값을 증가 혹은 감소시켜 새로운 ",Object(i.b)(R,{text:"Position"}),"을 만들고 있습니다. 이걸로"," ",Object(i.b)(A,{code:"nextWorld"}),"는 ",Object(i.b)(A,{code:"tick"}),"이 발생할 때마다 새로운",Object(i.b)(R,{text:"World"}),"를 만들어낼 준비가 끝났습니다. 이제 일정 시간 간격으로 ",Object(i.b)(A,{code:"tick"}),"을 반복 발생시킬 타이머만 있으면 움직이는 뱀을 볼 수 있습니다."),Object(i.b)(w,{code:"class Game extends React.Component {\n  // World\n  state = initialWorld\n\n  // -> void\n  componentDidMount () {\n    setInterval(this.handleTick, INTERVAL)\n  }\n\n  // -> void\n  handleTick = () => {\n    this.setState(oldWorld => nextWorld(oldWorld, 'tick'))\n  }\n\n  // ...\n}"}),Object(i.b)(u,null,Object(i.b)(A,{code:"INTERVAL"})," 밀리초 간격으로"," ",Object(i.b)(A,{code:"handleTick"})," 메서드를 실행하는 타이머가 설치되었습니다."," ",Object(i.b)(A,{code:"handleTick"})," 메서드는 타이머에 의해 반복적으로 실행될 때마다 매번 ",Object(i.b)(A,{code:"nextWorld"}),"를 이용해서 새 ",Object(i.b)(R,{text:"World"}),"를 만든 다음, 그것을 기존의 ",Object(i.b)(R,{text:"World"}),"와 교체해주고 있습니다."),Object(i.b)(u,null,"뱀의 위치가 한 칸 옮겨진 이 새로운 ",Object(i.b)(R,{text:"World"}),"가"," ",Object(i.b)(A,{code:"<Scene />"})," 컴포넌트에 전달되고, 요주의 데이터인"," ",Object(i.b)(R,{text:"Snake"}),"가 다시 ",Object(i.b)(A,{code:"<Snake />"})," ","컴포넌트에 전달되면서 화면에 표시되는 뱀의 위치가 갱신되고 있습니다. 아직 방향을 바꿀 수 없어서 금방 벽을 뚫고 사라져 버리긴 하지만 이제 뱀이 움직이고 있습니다!"))),Object(i.b)("div",{style:{display:"flex"}},Object(i.b)(N,null,Object(i.b)(K,{margin:"5.5em 0 1.5em"},Object(i.b)(Ye,null))),Object(i.b)(P,null,Object(i.b)(W,{number:"4.2",text:"방향을 바꾸는 뱀"}),Object(i.b)(u,null,"위에서 ",Object(i.b)(A,{code:"nextHead"})," 함수를 통해 뱀의 현재 진행 방향에 따라 다음 위치가 결정되도록 했었죠. 이제 진행 방향을 바꾸는 ",Object(i.b)(R,{text:"Action"}),"들을 처리해서 플레이어가 뱀을 마음대로 조작할 수 있도록 할 차례입니다. 현재 정의되어 있는"," ",Object(i.b)(A,{code:"tick"})," 외에 상/하/좌/우 네 방향에 대해 모두 별도로, 총 네 개의"," ",Object(i.b)(R,{text:"Action"}),"을 추가합니다."),Object(i.b)(w,{code:"// An Action is one of:\n//   - 'tick'\n//   - 'up'\n//   - 'down'\n//   - 'left'\n//   - 'right'"}),Object(i.b)(u,null,"상/하/좌/우를 나타내는 이 네 개의 값들은 문자 그대로 각각 해당 방향으로의 방향 전환을 의미합니다. 이 추가된 ",Object(i.b)(R,{text:"Action"}),"들 역시"," ",Object(i.b)(A,{code:"nextWorld"})," 함수를 거쳐 뱀의 진행 방향이 업데이트된 새로운"," ",Object(i.b)(R,{text:"World"}),"를 만들어내어야 합니다."),Object(i.b)(w,{code:"// World * Action -> World\nconst nextWorld = (oldWorld, action) => {\n  if (action === 'tick') {\n    // Snake\n    const oldSnake = oldWorld.snake\n    // Position\n    const newPosition = nextHead(oldSnake.position, oldSnake.direction)\n    // Snake\n    const newSnake = snake(newPosition, oldSnake.direction)\n\n    return world(newSnake)\n  }\n\n  if (action === 'up') {\n    // Snake\n    const newSnake = snake(oldSnake.position, 'up')\n\n    return world(newSnake)\n  }\n\n  if (action === 'down') {\n    // Snake\n    const newSnake = snake(oldSnake.position, 'down')\n\n    return world(newSnake)\n  }\n\n  if (action === 'left') {\n    // Snake\n    const newSnake = snake(oldSnake.position, 'left')\n\n    return world(newSnake)\n  }\n\n  if (action === 'right') {\n    // Snake\n    const newSnake = snake(oldSnake.position, 'right')\n\n    return world(newSnake)\n  }\n\n  return oldWorld\n}"}),Object(i.b)(u,null,"방향 전환을 처리하는 위의 코드에 대해서는 별달리 설명할 부분이 없습니다. 단순히 인자"," ",Object(i.b)(A,{code:"action"}),"에 따라 방향이 변경된 ",Object(i.b)(R,{text:"Snake"}),"를"," ","만들고, 그걸로 다시 ",Object(i.b)(R,{text:"World"}),"를 만들어 반환하고 있습니다. 지금은 이 정도로 해 놓고 나중에 후진 금지 같은 제약을 넣어보는 것도 괜찮겠죠?"),Object(i.b)(u,null,"자, 이제 사용자의 방향키 입력만 처리해주면 뱀을 조작할 있습니다. 위에서 타이머가"," ",Object(i.b)(A,{code:"tick"}),"을 일정 주기로 발생시켰던 것과 아이디어는 별반 다르지 않습니다. 그 때는 일정 주기로 ",Object(i.b)(A,{code:"tick"}),"을 ",Object(i.b)(A,{code:"nextWorld"})," ","함수에 인자로 넘겨 새 ",Object(i.b)(R,{text:"World"}),"를 만들었었죠. 이번에는 사용자가 방향키를 누를 때마다 해당 ",Object(i.b)(R,{text:"Action"}),"을"," ",Object(i.b)(A,{code:"nextWorld"})," 함수에 인자로 넘겨 새"," ",Object(i.b)(R,{text:"World"}),"를 만들 겁니다. 그런 다음"," ",Object(i.b)(f,{text:"React"}),"의 ",Object(i.b)(A,{code:"setState"}),"를 이용해 기존의 ",Object(i.b)(R,{text:"World"}),"를 대체해주는 걸로 방향 전환의 사이클이 끝이 납니다."),Object(i.b)(w,{code:"class Game extends React.Component {\n  // World\n  state = initialWorld\n\n  // -> void\n  componentDidMount () {\n    document.addEventListener('keydown', this.handleKey)\n    setInterval(this.handleTick, INTERVAL)\n  }\n\n  // KeyboardEvent -> void\n  handleKey = e => {\n    const { key } = e\n    let action = null\n\n    if (key === 'ArrowUp') {\n      action = 'up'\n    } else if (key === 'ArrowDown') {\n      action = 'down'\n    } else if (key === 'ArrowLeft') {\n      action = 'left'\n    } else if (key === 'ArrowRight') {\n      action = 'right'\n    }\n\n    if (action) {\n      this.setState(oldWorld => nextWorld(oldWorld, action))\n    }\n  }\n\n  // ...\n}"}))))},$e=function(t){t.title,t.title1;return Object(i.b)(b,{number:5,title:"게임 오버 (Work in Progress)"},Object(i.b)(u,null,"Coming soon."))},tn=function(t){var e=t.title,n=t.title1;return Object(i.b)(r.a.Fragment,null,Object(i.b)(V,{title:e,title1:n}),Object(i.b)(et,{title:e,title1:n}),Object(i.b)(he,{title:e,title1:n}),Object(i.b)(xe,{title:e,title1:n}),Object(i.b)(Qe,{title:e,title1:n}),Object(i.b)($e,{title:e,title1:n}))},en=function(t,e,n){return{snake:t,food:e,status:n}},nn=function(t,e){return{positions:t,direction:e}},on=function(t,e){return{x:t,y:e}},cn="up",rn="right",ln="down",sn="left",an=nn([on(3,3)],rn),bn=en(an,on(15,18),0),dn={tick:"tick",up:"up",down:"down",left:"left",right:"right"},un=function(t,e){if(void 0===t&&(t=bn),!e)return t;switch(e){case dn.tick:if(2===t.status)return t;var n=t.snake,o=n.positions,i=On(o[0],n.direction),c=yn(i,t.food),r=[i].concat(c?o:o.slice(0,o.length-1)),l=nn(r,n.direction);if(fn(l))return en(t.snake,t.food,2);var s=c?jn(i):t.food;return en(l,s,1);case dn.up:return t.snake.direction===ln?t:en(nn(t.snake.positions,cn),t.food,t.status);case dn.down:return t.snake.direction===cn?t:en(nn(t.snake.positions,ln),t.food,t.status);case dn.left:return t.snake.direction===rn?t:en(nn(t.snake.positions,sn),t.food,t.status);case dn.right:return t.snake.direction===sn?t:en(nn(t.snake.positions,rn),t.food,t.status);default:return t}},jn=function(t){for(var e=on(zt()(0,19),zt()(0,19));yn(e,t);)e=on(zt()(0,19),zt()(0,19));return e},On=function(t,e){var n=t.x,o=t.y;return e===cn?o-=1:e===rn?n+=1:e===ln?o+=1:e===sn&&(n-=1),on(n,o)},fn=function(t){return pn(t)||mn(t)},pn=function(t){var e=t.positions[0];return e.x>=20||e.y>=20||e.x<0||e.y<0},mn=function(t){return t.positions.slice(1).some(function(e){return yn(e,t.positions[0])})},yn=function(t,e){return t.x===e.x&&t.y===e.y},hn=function(t){function e(){for(var e,n=arguments.length,o=new Array(n),i=0;i<n;i++)o[i]=arguments[i];return(e=t.call.apply(t,[this].concat(o))||this).intervalID=0,e.state=un(),e.handleTick=function(){e.setState(function(t){return un(t,dn.tick)})},e.handleKey=function(t){t.preventDefault();var n=t.key,o=null;"ArrowUp"===n||"k"===n?o=dn.up:"ArrowRight"===n||"l"===n?o=dn.right:"ArrowDown"===n||"j"===n?o=dn.down:"ArrowLeft"!==n&&"h"!==n||(o=dn.left),o&&e.setState(function(t){return un(t,o)})},e.handlePlayClick=function(){e.setState(en(bn.snake,bn.food,1))},e.handleContinueClick=function(){e.setState(bn)},e}Dt()(e,t);var n=e.prototype;return n.componentWillUnmount=function(){this.uninstallTimer()},n.componentDidUpdate=function(t,e){2!==e.status&&2===this.state.status?(this.uninstallKeyHandler(),this.uninstallTimer()):1!==e.status&&1===this.state.status&&(this.installKeyHandler(),this.installTimer())},n.installTimer=function(){this.uninstallTimer(),this.intervalID=setInterval(this.handleTick,90)},n.uninstallTimer=function(){this.intervalID&&clearInterval(this.intervalID)},n.installKeyHandler=function(){this.uninstallKeyHandler(),document.addEventListener("keydown",this.handleKey)},n.uninstallKeyHandler=function(){document.removeEventListener("keydown",this.handleKey)},n.render=function(){return Object(i.b)(xn,{world:this.state,onClickPlay:this.handlePlayClick,onClickContinue:this.handleContinueClick})},e}(r.a.Component),xn=function(t){var e=t.world,n=t.onClickPlay,c=t.onClickContinue;return Object(i.b)("div",{css:Object(o.a)({position:"relative",paddingBottom:"100%",width:"100%",height:0,border:"1px solid #ced4da",backgroundColor:"#f1f3f5"},"")},Object(i.b)(An,{position:e.food}),Object(i.b)(Tn,{snake:e.snake}),Object(i.b)(gn,{status:e.status,onClickPlay:n,onClickContinue:c}))},kn={name:"1hrci7v",styles:"position:absolute;top:0;right:0;bottom:0;left:0;display:flex;flex-direction:column;align-items:center;justify-content:center;letter-spacing:0.1em;"},gn=function(t){var e=t.status,n=t.onClickPlay,o=t.onClickContinue;return Object(i.b)("div",{css:kn},0===e&&Object(i.b)(Cn,{onClick:n}),2===e&&Object(i.b)(Ln,{onClick:o}))},vn={name:"mpa8ru",styles:"margin:0;padding:0;outline:none;border:none;width:100%;height:100%;letter-spacing:0.1em;font-size:0.8em;background-color:transparent;cursor:pointer;:hover{border-color:#aaa;}"},wn={name:"shmi0w",styles:"padding:0.6em 0.9em;border:1px solid #ccc;border-radius:5px;background-color:white;button:hover &{border:1px solid #aaa;}"},Cn=function(t){var e=t.onClick;return Object(i.b)(r.a.Fragment,null,Object(i.b)("button",{css:vn,onClick:e},Object(i.b)("span",{css:wn},"PLAY")))},Sn={name:"1rx89dk",styles:"display:flex;flex-direction:column;align-items:center;justify-content:center;margin:0;padding:0;outline:none;border:none;width:100%;height:100%;letter-spacing:0.1em;font-size:0.8em;cursor:pointer;background-color:transparent;:hover{border-color:#aaa;}"},Wn={name:"1ovh8xz",styles:"margin:0 0 0.5em 0;font-size:1.5em;font-family:Georgia;font-style:italic;"},En={name:"shmi0w",styles:"padding:0.6em 0.9em;border:1px solid #ccc;border-radius:5px;background-color:white;button:hover &{border:1px solid #aaa;}"},Ln=function(t){var e=t.onClick;return Object(i.b)("button",{css:Sn,onClick:e},Object(i.b)("p",{css:Wn},"Game Over"),Object(i.b)("span",{css:En},"INSERT COIN TO CONTINUE"))},Tn=function(t){var e=t.snake;return Object(i.b)(r.a.Fragment,null,e.positions.map(function(t,e){return Object(i.b)(In,{key:e,x:t.x,y:t.y})}))},An=function(t){var e=t.position;return Object(i.b)(In,{food:!0,x:e.x,y:e.y})},In=function(t){var e=t.x,n=t.y,c=t.food,r=void 0!==c&&c;return Object(i.b)("div",{css:Object(o.a)({position:"absolute",left:e/20*100+"%",top:n/20*100+"%",marginLeft:-1,marginTop:-1,width:"6%",height:"6%",border:"2px solid #f1f3f5",borderRadius:"50%"},""),style:{backgroundColor:r?"#ffa8a8":"#5c940d"}})},Rn=hn;n.d(e,"query",function(){return zn});var Dn={name:"vycneo",styles:"height:300px;"},Nn={container:{display:"flex",width:"100%"},left:{width:"40%"},right:{width:"100%"},game:{position:"sticky",top:"25vh",height:"50vh"}},zn="263595267";e.default=function(t){var e=t.data.site.siteMetadata,n=e.title,c=e.title1;return Object(i.b)(s.a,null,Object(i.b)(l.a,{title:"How to Make Snake Game"}),Object(i.b)("div",{css:Object(o.a)([Nn.container],"")},Object(i.b)("div",{css:Object(o.a)([Nn.right],"")},Object(i.b)(tn,{title:n,title1:c}),Object(i.b)("div",{css:Dn}))))}},171:function(t,e){t.exports="// go :: string -> string\nfunction go (s) {\n  return 'Hello ' + s\n}\n"}}]);
//# sourceMappingURL=component---src-pages-index-js-9524e12231347cd051cc.js.map